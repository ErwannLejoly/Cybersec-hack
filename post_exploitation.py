# cybersec-hack/post_exploitation.py

import os
import subprocess

def search_sensitive_files():
    print("[+] Recherche de fichiers sensibles sur la cible locale...")
    patterns = ["*.ssh", "*.kdbx", "*.env", "*credentials*", "*password*", "id_rsa"]
    findings = []
    for pattern in patterns:
        try:
            result = subprocess.check_output(["find", "/", "-type", "f", "-iname", pattern], stderr=subprocess.DEVNULL)
            files = result.decode().strip().split('\n')
            for f in files:
                if f:
                    findings.append(f)
        except subprocess.CalledProcessError:
            continue
    return findings

def run_privilege_escalation_check():
    print("[+] Exécution de vérifications d'escalade de privilèges...")
    try:
        result = subprocess.check_output("id", shell=True).decode().strip()
        if "uid=0" in result:
            return "[✓] Déjà root."
        else:
            sudo_check = subprocess.check_output("sudo -l", shell=True, stderr=subprocess.DEVNULL).decode()
            return f"[~] sudo -l :\n{sudo_check}"
    except Exception as e:
        return f"[!] Erreur lors de la vérification : {e}"

def run_dummy_post_exploitation():
    print("[+] Début du module de post-exploitation avancé...")
    sensitive_files = search_sensitive_files()
    priv_esc = run_privilege_escalation_check()

    print("\n[+] Résultats de la recherche de fichiers sensibles :")
    for f in sensitive_files:
        print(f"  - {f}")

    print("\n[+] Vérification d'escalade de privilèges :")
    print(priv_esc)

    print("[✓] Module post-exploitation terminé.")
    return {
        "sensitive_files": sensitive_files,
        "privilege_escalation": priv_esc
    }
